name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-asyncio pytest-mock
          if [ -f services/backend-bot/requirements.txt ]; then pip install -r services/backend-bot/requirements.txt; fi
          
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Test with pytest
        run: |
          cd services/backend-bot
          python -m pytest tests/ -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check SSH key
        run: |
          echo "Checking SSH key format..."
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | ssh-keygen -l -f /dev/stdin || echo "Invalid SSH key format"
          
      - name: Test SSH connection
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > deploy_key
          chmod 600 deploy_key
          ssh -i deploy_key -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@87.228.82.67 "echo 'SSH connection successful'"
          
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: 87.228.82.67
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          debug: true
          script: |
            echo "Starting deployment..."
            pwd
            ls -la
            cd /home/${{ secrets.SERVER_USER }}/admarket
            echo "Current directory: $(pwd)"
            echo "Directory contents:"
            ls -la
            echo "Pulling latest changes..."
            git pull origin main
            echo "Stopping containers..."
            docker compose down
            echo "Building and starting containers..."
            docker compose up -d --build
            echo "Deployment completed!" 